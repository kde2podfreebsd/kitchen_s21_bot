import os
from dotenv import load_dotenv

from sqlalchemy import select, and_
from telebot import formatting, types

from database.dal.client import ClientDAL
from database.models import Client
from database.session import async_session

load_dotenv()


class TextMarkup(object):

    _report_text: str = None
    _sub_alert_text: str = None
    _sub_menu_text: str = None
    _error_custom_invoice = None
    _set_custom_invoice: str = None
    _invoice_text: str = None
    _after_feedback: str = None
    _feedback_text: str = None
    _start_message: str = None

    @classmethod
    def main_user_menu(cls):
        cls._start_message = "–ú–µ–Ω—é —Ç–µ–∫—Å—Ç"
        return cls._start_message

    @classmethod
    def feedback(cls):
        cls._feedback_text = "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏ –Ω–∞—à –ª–Æ–±–ò–º–´–π ADM –≤–Ω–µ—Å–µ—Ç —ç—Ç–æ –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–∫—É–ø–æ–∫"
        return cls._feedback_text

    @classmethod
    def after_feedback(cls):
        cls._after_feedback = "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ, –º—ã –µ–≥–æ —É–∂–µ –ø–µ—Ä–µ–¥–∞–ª–∏ ADM!"
        return cls._after_feedback

    @classmethod
    def invoice_text(cls):
        cls._invoice_text = "–ò–Ω–≤–æ–π—Å —Ç–µ–∫—Å—Ç"
        return cls._invoice_text

    @classmethod
    def set_custom_invoice(cls):
        cls._set_custom_invoice = "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–æ–Ω–∞—Ç–∞ –≤ —Ä—É–±–ª—è—Ö. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - 60‚ÇΩ"
        return cls._set_custom_invoice

    @classmethod
    def error_custom_invoice(cls):
        cls._error_custom_invoice = "–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –≤–µ—Ä–Ω—É—é —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
        return cls._error_custom_invoice

    @classmethod
    async def sub_menu_text(cls, chat_id):
        async with async_session() as session:
            existing_user = await session.execute(
                select(Client).where(and_(Client.chat_id == chat_id))
            )
            existing_user = existing_user.scalars().first()

            if existing_user.donation_status:
                cls._sub_menu_text = f"–£ –í–∞—Å –≤–∫–ª—é—á–µ–Ω—ã –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–æ–Ω–∞—Ç–∏–∫–∞—Ö!)\n–°–ª–µ–¥—É—é—â–∞—è –¥–∞—Ç–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {existing_user.next_donation_time}"
                return cls._sub_menu_text
            else:
                cls._sub_menu_text = "–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –¥–æ–Ω–∞—Ç–∞—Ö?"
                return cls._sub_menu_text

    @classmethod
    def sub_alert_text(cls, client):
        cls._sub_alert_text = "‚≠êÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –¥–æ–Ω–∞—Ç–∞—Ö! ‚≠êÔ∏è\n\n" \
                  f"–ü—Ä–∏–≤–µ—Ç, {client.first_name if client.first_name is not None else client.chat_id}! –ü–æ—Ä–∞ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π –¥–æ–±—Ä—ã–π –≤–∑–Ω–æ—Å. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üôè"
        return cls._sub_alert_text

    @classmethod
    def report_text(cls, total_amount: float, last_month_amount: float):
        cls._report_text = f"–û–±—â–∞—è —Å—É–º–º–∞ –¥–æ–Ω–∞—Ç–æ–≤: {total_amount}‚ÇΩ\n–û–±—â–∞—è —Å—É–º–º–∞ –¥–æ–Ω–∞—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: {last_month_amount}‚ÇΩ\n\n–í google sheets –¥–æ—Å—Ç—É–ø–Ω—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏!"
        return cls._report_text


class InlineMarkup(object):

    _hide_menu: types.ReplyKeyboardRemove = None

    @classmethod
    @property
    def hide_reply_markup(cls) -> types.ReplyKeyboardRemove():
        cls._hide_menu: object = types.ReplyKeyboardRemove()
        return cls._hide_menu

    @classmethod
    def main_user_menu(cls):
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="–î–æ–Ω–∞—Ç—ã", callback_data="donation_menu"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="–û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å", callback_data="report"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="–í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è", callback_data="feedback"
                    )
                ],
            ],
        )

    @classmethod
    def report_btn(cls):
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="–û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å | Google Sheets", url=os.getenv("GOOGLE_SHEETS_SHARE_LINK")
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_main_menu"
                    )
                ]
            ],
        )

    @classmethod
    def back_to_invoice_menu(cls):
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="donation_menu"
                    )
                ]
            ],
        )

    @classmethod
    def feed_menu(cls):
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π", callback_data="my_feed"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_main_menu"
                    )
                ]
            ],
        )

    @classmethod
    async def sub_on_donation_alert(cls, chat_id: int):
        async with async_session() as session:
            existing_user = await session.execute(
                select(Client).where(and_(Client.chat_id == chat_id))
            )
            existing_user = existing_user.scalars().first()

            if existing_user.donation_status:
                return types.InlineKeyboardMarkup(
                    row_width=1,
                    keyboard=[
                        [
                            types.InlineKeyboardButton(
                                text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="unsub_on_donation_alert"
                            )
                        ],
                        [
                            types.InlineKeyboardButton(
                                text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="donation_menu"
                            )
                        ]
                    ],
                )

            else:

                return types.InlineKeyboardMarkup(
                    row_width=1,
                    keyboard=[
                        [
                            types.InlineKeyboardButton(
                                text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="sub_on_donation_alert"
                            )
                        ],
                        [
                            types.InlineKeyboardButton(
                                text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="donation_menu"
                            )
                        ]
                    ],
                )

    @classmethod
    def PaymentBtnList(cls, chat_id: int):
        return types.InlineKeyboardMarkup(
            row_width=2,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        "–ú–æ–∏ –¥–æ–Ω–∞—Ç—ã", callback_data="my_donations"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–º–µ—Å—è—á–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –æ –¥–æ–Ω–∞—Ç–∞—Ö", callback_data=f"donat_sub_menu"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        "–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å 100‚ÇΩ", callback_data=f"payment100#{chat_id}"
                    ),
                    types.InlineKeyboardButton(
                        "–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å 200‚ÇΩ", callback_data=f"payment200#{chat_id}"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        "–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å 500‚ÇΩ", callback_data=f"payment500#{chat_id}"
                    ),
                    types.InlineKeyboardButton(
                        "–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å 1000‚ÇΩ", callback_data=f"payment1000#{chat_id}"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        "–í—ã–±—Ä–∞—Ç—å —Å–≤–æ—é —Å—É–º–º—É", callback_data=f"payment_n_sum#{chat_id}"
                    )
                ],
                [types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main_menu")],
            ],
        )